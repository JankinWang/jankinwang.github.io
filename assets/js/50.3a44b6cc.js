(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{521:function(e,r,t){"use strict";t.r(r);var o=t(48),s=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"promise-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-对象"}},[e._v("#")]),e._v(" Promise 对象")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("[Promise 的含义](https://es6.ruanyifeng.com/#docs/promise#Promise 的含义)")]),e._v(" "),t("p",[e._v("Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[e._v("基本用法"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.prototype.then()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.prototype.then()"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.prototype.catch()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.prototype.catch()"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.prototype.finally()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.prototype.finally()"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.all()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.all()"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("用于将多个 Promise 实例，包装成一个新的 Promise 实例。")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("all")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("p1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" p3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/*\n 注：都成功整体才算成功，有一个失败整体都是 rejected\n（1）只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，\n\t此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。\n\t\n（2）只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，\n\t此时第一个被reject的实例的返回值，会传递给p的回调函数。\n*/")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.race()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.race()"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("只要"),t("code",[e._v("p1")]),e._v("、"),t("code",[e._v("p2")]),e._v("、"),t("code",[e._v("p3")]),e._v("之中有一个实例率先改变状态，"),t("code",[e._v("p")]),e._v("的状态就跟着改变。")]),e._v(" "),t("p",[e._v("那个率先改变的 Promise 实例的返回值，就传递给"),t("code",[e._v("p")]),e._v("的回调函数。（谁快听谁的）")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.allSettled()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.allSettled()"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("只有等到参数数组的所有 Promise 对象都发生状态变更（不管是"),t("code",[e._v("fulfilled")]),e._v("还是"),t("code",[e._v("rejected")]),e._v("），返回的 Promise 对象才会发生状态变更。")]),e._v(" "),t("p",[e._v("且状态总是"),t("code",[e._v("fulfilled")]),e._v("，它的回调函数会接收到一个数组作为参数，该数组的每个成员对应前面数组的每个 Promise 对象。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.any()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.any()"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("只要参数实例有一个变成"),t("code",[e._v("fulfilled")]),e._v("状态，包装实例就会变成"),t("code",[e._v("fulfilled")]),e._v("状态；如果所有参数实例都变成"),t("code",[e._v("rejected")]),e._v("状态，包装实例就会变成"),t("code",[e._v("rejected")]),e._v("状态。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.resolve()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.resolve()"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.reject()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.reject()"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#%E5%BA%94%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[e._v("应用"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise.try()",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise.try()"),t("OutboundLink")],1)])])]),e._v(" "),t("h3",{attrs:{id:"promise-对象有以下两个特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-对象有以下两个特点"}},[e._v("#")]),e._v(" Promise 对象有以下两个特点")]),e._v(" "),t("blockquote",[t("p",[e._v("（1）对象的状态不受外界影响。"),t("code",[e._v("Promise")]),e._v("对象代表一个异步操作，有三种状态："),t("code",[e._v("pending")]),e._v("（进行中）、"),t("code",[e._v("fulfilled")]),e._v("（已成功）和"),t("code",[e._v("rejected")]),e._v("（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是"),t("code",[e._v("Promise")]),e._v("这个名字的由来，它的英语意思就是“承诺”，表示其他手段无法改变。")]),e._v(" "),t("p",[e._v("（2）一旦状态改变，就不会再变，任何时候都可以得到这个结果。"),t("code",[e._v("Promise")]),e._v("对象的状态改变，只有两种可能：从"),t("code",[e._v("pending")]),e._v("变为"),t("code",[e._v("fulfilled")]),e._v("和从"),t("code",[e._v("pending")]),e._v("变为"),t("code",[e._v("rejected")]),e._v("。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果，这时就称为 resolved（已定型）。如果改变已经发生了，你再对"),t("code",[e._v("Promise")]),e._v("对象添加回调函数，也会立即得到这个结果。这与事件（Event）完全不同，事件的特点是，如果你错过了它，再去监听，是得不到结果的。")])]),e._v(" "),t("h3",{attrs:{id:"promise的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise的状态"}},[e._v("#")]),e._v(" Promise的状态")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("状态")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[e._v('"has-resolution" - Fulfilled')])]),e._v(" "),t("td",[e._v("resolve(成功)时。此时会调用 "),t("code",[e._v("onFulfilled")])])]),e._v(" "),t("tr",[t("td",[t("strong",[e._v('"has-rejection" - Rejected')])]),e._v(" "),t("td",[e._v("reject(失败)时。此时会调用 "),t("code",[e._v("onRejected")])])]),e._v(" "),t("tr",[t("td",[t("strong",[e._v('"unresolved" - Pending')])]),e._v(" "),t("td",[e._v("promise对象刚被创建后的初始化状态，既不是resolve也不是reject的状态。")])])])]),e._v(" "),t("blockquote",[t("p",[e._v("关于上面这三种状态的读法，其中 左侧为在 "),t("a",{attrs:{href:"http://liubin.org/promises-book/#es6-promises",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES6 Promises"),t("OutboundLink")],1),e._v(" 规范中定义的术语， 而右侧则是在 "),t("a",{attrs:{href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promises/A+"),t("OutboundLink")],1),e._v(" 中描述状态的术语。")])]),e._v(" "),t("h3",{attrs:{id:"thenable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thenable"}},[e._v("#")]),e._v(" Thenable")]),e._v(" "),t("p",[t("code",[e._v("Promise.resolve")]),e._v(" 方法另一个作用就是将 "),t("a",{attrs:{href:"http://liubin.org/promises-book/#resolve-thenable",target:"_blank",rel:"noopener noreferrer"}},[e._v("thenable"),t("OutboundLink")],1),e._v(" 对象转换为promise对象。")]),e._v(" "),t("h2",{attrs:{id:"其他文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他文章"}},[e._v("#")]),e._v(" 其他文章")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6945319439772434469",target:"_blank",rel:"noopener noreferrer"}},[e._v("手写 Promise"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);