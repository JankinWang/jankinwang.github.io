(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{576:function(t,n,s){"use strict";s.r(n);var a=s(48),e=Object(a.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"建表规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#建表规范"}},[this._v("#")]),this._v(" 建表规范")]),this._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("/* 建表规范 */ ------------------\n    -- Normal Format, NF\n        - 每个表保存一个实体信息\n        - 每个具有一个ID字段作为主键\n        - ID主键 + 原子表\n    -- 1NF, 第一范式\n        字段不能再分，就满足第一范式。\n    -- 2NF, 第二范式\n        满足第一范式的前提下，不能出现部分依赖。\n        消除符合主键就可以避免部分依赖。增加单列关键字。\n    -- 3NF, 第三范式\n        满足第二范式的前提下，不能出现传递依赖。\n        某个字段依赖于主键，而有其他字段依赖于该字段。这就是传递依赖。\n        将一个实体信息的数据放在一个表内实现。\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);